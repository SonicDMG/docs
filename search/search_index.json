{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Your Wiki to implement Awesome Applications with Astra Welcome to the Awesome Astra wiki! As the name stated it is an attempt to gather all information regarding Astra usage in a single place to help you in the development of your applications. It is a community and collaborative effort, if you have some inputs or correction please do so. \ud83d\udee0\ufe0f Coding with Astra \u00b6 \ud83d\udce6 Tools List \u00b6 Apache Airflow : Apache Airflow is an open source workflow management system. It provides components which allow engineers to build data pipelines between different systems Apache Nifi : NiFi was built to automate the flow of data between systems. While the term 'dataflow' is used in a variety of contexts, we use it here to mean the automated and managed flow of information between systems. Apache Spark : Apache Spark is an open-source, distributed processing system used for big data workloads. It utilizes in-memory caching, and optimized query execution for fast analytic queries against data of any size. Use Apache Spark to connect to your database and begin accessing your Astra DB tables using Scala in spark-shell. Cloud Functions (Python Driver) : Google's function-as-a-service offering that provides a serverless execution environment for your code. Cloud Functions are commonly used to extend Astra DB with additional data processing capabilities and connect Astra DB with other cloud services into data pipelines. Cloud Functions (Python SDK) : Google's function-as-a-service offering that provides a serverless execution environment for your code. Cloud Functions are commonly used to extend Astra DB with additional data processing capabilities and connect Astra DB with other cloud services into data pipelines. Cql Proxy : cql-proxy is designed to forward your application's CQL traffic to an appropriate database service. It listens on a local address and securely forwards that traffic. Cql Shell : the standalone CQLSH client is a separate, lightweight tool you can use to interact with your database. Datagrip Jetbrains : DataGrip is a database management environment for developers. It is designed to query, create, and manage databases. Databases can work locally, on a server, or in the cloud. Supports MySQL, PostgreSQL, Microsoft SQL Server, Oracle, and more. If you have a JDBC driver, add it to DataGrip, connect to your DBMS, and start working. DataStax Bulk : The DataStax Bulk Loader tool (DSBulk) is a unified tool for loading into and unloading from Cassandra-compatible storage engines, such as OSS Apache Cassandra\u00ae, DataStax Astra and DataStax Enterprise (DSE). DBeaver : DBeaver is a universal database management tool for everyone who needs to work with data in a professional way. With DBeaver you are able to manipulate with your data like in a regular spreadsheet, create analytical reports based on records from different data storages, export information in an appropriate format. IntelliJ IDEA : The Capable & Ergonomic Java IDE by JetBrains JanusGraph : JanusGraph is designed to support the processing of graphs so large that they require storage and computational capacities beyond what a single machine can provide. Scaling graph data processing for real time traversals and analytical queries is JanusGraph\u2019s foundational benefit. This section will discuss the various specific benefits of JanusGraph and its underlying, supported persistence solutions. Micronaut : Micronaut is a modern, JVM-based, full stack Java framework designed for building modular, easily testable JVM applications with support for Java, Kotlin, and Groovy. Micronaut is developed by the creators of the Grails framework and takes inspiration from lessons learnt over the years building real-world applications from monoliths to microservices using Spring, Spring Boot and Grails. MindDB :MindsDB enables you to use ML predictions in your database using SQL. Pentaho Data Integration : Pentaho Data Integration (PDI) provides the Extract, Transform, and Load (ETL) capabilities that facilitate the process of capturing, cleansing, and storing data using a uniform and consistent format that is accessible and relevant to end users and IoT technologies. TablePlus : TablePlus is a modern, native tool with elegant UI that allows you to simultaneously manage multiple databases such as MySQL, PostgreSQL, SQLite, Microsoft SQL Server and more.","title":"\ud83c\udfe0 Home"},{"location":"#coding-with-astra","text":"","title":"\ud83d\udee0\ufe0f Coding with Astra"},{"location":"#tools-list","text":"Apache Airflow : Apache Airflow is an open source workflow management system. It provides components which allow engineers to build data pipelines between different systems Apache Nifi : NiFi was built to automate the flow of data between systems. While the term 'dataflow' is used in a variety of contexts, we use it here to mean the automated and managed flow of information between systems. Apache Spark : Apache Spark is an open-source, distributed processing system used for big data workloads. It utilizes in-memory caching, and optimized query execution for fast analytic queries against data of any size. Use Apache Spark to connect to your database and begin accessing your Astra DB tables using Scala in spark-shell. Cloud Functions (Python Driver) : Google's function-as-a-service offering that provides a serverless execution environment for your code. Cloud Functions are commonly used to extend Astra DB with additional data processing capabilities and connect Astra DB with other cloud services into data pipelines. Cloud Functions (Python SDK) : Google's function-as-a-service offering that provides a serverless execution environment for your code. Cloud Functions are commonly used to extend Astra DB with additional data processing capabilities and connect Astra DB with other cloud services into data pipelines. Cql Proxy : cql-proxy is designed to forward your application's CQL traffic to an appropriate database service. It listens on a local address and securely forwards that traffic. Cql Shell : the standalone CQLSH client is a separate, lightweight tool you can use to interact with your database. Datagrip Jetbrains : DataGrip is a database management environment for developers. It is designed to query, create, and manage databases. Databases can work locally, on a server, or in the cloud. Supports MySQL, PostgreSQL, Microsoft SQL Server, Oracle, and more. If you have a JDBC driver, add it to DataGrip, connect to your DBMS, and start working. DataStax Bulk : The DataStax Bulk Loader tool (DSBulk) is a unified tool for loading into and unloading from Cassandra-compatible storage engines, such as OSS Apache Cassandra\u00ae, DataStax Astra and DataStax Enterprise (DSE). DBeaver : DBeaver is a universal database management tool for everyone who needs to work with data in a professional way. With DBeaver you are able to manipulate with your data like in a regular spreadsheet, create analytical reports based on records from different data storages, export information in an appropriate format. IntelliJ IDEA : The Capable & Ergonomic Java IDE by JetBrains JanusGraph : JanusGraph is designed to support the processing of graphs so large that they require storage and computational capacities beyond what a single machine can provide. Scaling graph data processing for real time traversals and analytical queries is JanusGraph\u2019s foundational benefit. This section will discuss the various specific benefits of JanusGraph and its underlying, supported persistence solutions. Micronaut : Micronaut is a modern, JVM-based, full stack Java framework designed for building modular, easily testable JVM applications with support for Java, Kotlin, and Groovy. Micronaut is developed by the creators of the Grails framework and takes inspiration from lessons learnt over the years building real-world applications from monoliths to microservices using Spring, Spring Boot and Grails. MindDB :MindsDB enables you to use ML predictions in your database using SQL. Pentaho Data Integration : Pentaho Data Integration (PDI) provides the Extract, Transform, and Load (ETL) capabilities that facilitate the process of capturing, cleansing, and storing data using a uniform and consistent format that is accessible and relevant to end users and IoT technologies. TablePlus : TablePlus is a modern, native tool with elegant UI that allows you to simultaneously manage multiple databases such as MySQL, PostgreSQL, SQLite, Microsoft SQL Server and more.","title":"\ud83d\udce6 Tools List"},{"location":"apache-airflow/","text":"\ud83c\udfe0 Back to home Last Update 2/10/2022 *This article was written by Aaron Ploetz* \ud83d\udccb On this page A - Overview B - Prerequisites C - Installation D - Acknowledgements A - Overview \u00b6 Apache Airflow is an open source workflow management system. It provides components which allow engineers to build data pipelines between different systems. These instructions will step through tasks/adjustments to be done in each product (Astra DB, cql-proxy, Apache Airflow), ultimately resulting in Airflow being able to work with AstraDB in its directed acyclic graphs (DAG). \u2139\ufe0f Apache Airflow Documentation B - Prerequisites \u00b6 You should have an Astra account You should Create and Astra Database You should Have an Astra Token You should Download your Secure bundle You should install python3 and pip3 (local deploymnent of Airflow) or Docker (docker) This article was written for Apache Airflow version 2.2.3 on MacOS with Python 3.9 . C - Installation \u00b6 \u2705 Step 0 Download and install \u00b6 Following the Apache Airflow reference documentation download and install the software. \u2705 Step 1 Create the keyspace airflow \u00b6 From the Astra DB dashboard , click on your database name. Scroll down to where the keyspaces are listed, and click the Add Keyspace button to create a new keyspace. Name this keyspace airflow . \u2705 Step 2 Start Cql Proxy \u00b6 DataStax\u2019s cql-proxy is designed to function as an intermediate connection point to allow legacy Apache Cassandra applications to connect to DataStax Astra DB using its new Secure Connect Bundle. There are a few ways to install and run DataStax\u2019s cql-proxy, as outlined in CQL-PROXY . Be sure to start cql-proxy with the following settings: Using the Secure Connect Bundle downloaded in the previous section Binding it to the listen IP of the server instance Specifying the username of \u201ctoken\u201d Specifying the Astra Token created for the user in Astra DB as the password You can run cql-proxy (in the foreground) from the command line in this way, like this: ./cql-proxy --bundle ~/local/astraCreds/secure-connect.zip \\ --bind 127 .0.0.1 \\ --username token \\ --password AstraCS:rtFckUZblahblahblahblahblahblaha3953d799a525 Important to note that the command shown above binds cql-proxy to localhost (127.0.0.1), meaning it is not reachable (by Airflow) from outside the server instance. \u2705 Step 3 Create a new connection in Apache Airflow \u00b6 Inside Apache Airflow, click Connections from underneath the Admin drop-down menu. Then click on the blue button labeled with the plus sign ( + ) to add a new connection. Fill out the form as shown in Figure 2: Connection Id: A unique identifier for the connection in Apache Airflow, which will be referenced inside the DAG code. We will use \u201ccassandra_cqlproxy.\u201d Connection Type: Select \u201cCassandra\u201d from the drop-down. If it is not present, you will have to install Airflow\u2019s Cassandra provider. Host: The listen address that cql-proxy is bound to. In this case, that is \u201c127.0.0.1.\u201d Schema: The Cassandra keyspace which we created in Astra DB. We\u2019ll set that to \u201cairflow\u201d in this case. Login: Your Astra DB client id. Password: Your Astra DB client secret. Port: The port that cql-proxy is listening on for the CQL native binary protocol, most likely 9042. Figure 2 - Create a new Cassandra connection for Apache Airflow. Click the blue Save button to persist the new connection. \u2705 Step 4 Create a new DAG in Apache Airflow \u00b6 A directed acyclic graph (DAG) is essentially a Python script which imports one or more libraries specific to Airflow. To create a new DAG, first locate your DAG directory. By default, Airflow looks for custom DAGs in the ~/airflow/dags/ directory. For testing, there is a sample DAG out in the following GitHub repository: https://github.com/aar0np/DS_Python_stuff/blob/main/cassandra_test_dag.py This DAG uses the following line to reference the Cassandra connection we created in the above step: hook = CassandraHook('cassandra_cqlproxy') The other important aspect is that this DAG sets its unique identifier as cass_hooks_tutorial : with DAG( 'cass_hooks_tutorial', It also specifically creates two unique tasks: check_table_exists query_system_local \u2705 Step 5 Final Test \u00b6 To test the connection, copy the DAG mentioned above into the /dags/ directory. Then we will invoke Airflow\u2019s task testing functionality, by running airflow tasks test and specifying: The DAG\u2019s unique identifier The name of the task to be run The execution date If today\u2019s date is 2022-02-08, the command looks like this: airflow tasks test cass_hooks_tutorial check_table_exists 2022-02-08 Many messages will go by quickly. If it worked, the final messages should look something like this: INFO - Done. Returned value was: True INFO - Marking task as SUCCESS. dag_id=cass_hooks_tutorial, task_id=check_table_exists, execution_date=20220208T000000, start_date=20220208T195333, end_date=20220208T195334 D - Acknowledgements \u00b6 Special thanks goes out to Obioma Anomnachi of Anant. Obi\u2019s video and GitHub repo proved quite helpful in building out this tutorial.","title":"Apache airflow"},{"location":"apache-airflow/#a-overview","text":"Apache Airflow is an open source workflow management system. It provides components which allow engineers to build data pipelines between different systems. These instructions will step through tasks/adjustments to be done in each product (Astra DB, cql-proxy, Apache Airflow), ultimately resulting in Airflow being able to work with AstraDB in its directed acyclic graphs (DAG). \u2139\ufe0f Apache Airflow Documentation","title":"A - Overview"},{"location":"apache-airflow/#b-prerequisites","text":"You should have an Astra account You should Create and Astra Database You should Have an Astra Token You should Download your Secure bundle You should install python3 and pip3 (local deploymnent of Airflow) or Docker (docker) This article was written for Apache Airflow version 2.2.3 on MacOS with Python 3.9 .","title":"B - Prerequisites"},{"location":"apache-airflow/#c-installation","text":"","title":"C - Installation"},{"location":"apache-airflow/#step-0-download-and-install","text":"Following the Apache Airflow reference documentation download and install the software.","title":"\u2705 Step 0 Download and install"},{"location":"apache-airflow/#step-1-create-the-keyspace-airflow","text":"From the Astra DB dashboard , click on your database name. Scroll down to where the keyspaces are listed, and click the Add Keyspace button to create a new keyspace. Name this keyspace airflow .","title":"\u2705 Step 1 Create the keyspace airflow"},{"location":"apache-airflow/#step-2-start-cql-proxy","text":"DataStax\u2019s cql-proxy is designed to function as an intermediate connection point to allow legacy Apache Cassandra applications to connect to DataStax Astra DB using its new Secure Connect Bundle. There are a few ways to install and run DataStax\u2019s cql-proxy, as outlined in CQL-PROXY . Be sure to start cql-proxy with the following settings: Using the Secure Connect Bundle downloaded in the previous section Binding it to the listen IP of the server instance Specifying the username of \u201ctoken\u201d Specifying the Astra Token created for the user in Astra DB as the password You can run cql-proxy (in the foreground) from the command line in this way, like this: ./cql-proxy --bundle ~/local/astraCreds/secure-connect.zip \\ --bind 127 .0.0.1 \\ --username token \\ --password AstraCS:rtFckUZblahblahblahblahblahblaha3953d799a525 Important to note that the command shown above binds cql-proxy to localhost (127.0.0.1), meaning it is not reachable (by Airflow) from outside the server instance.","title":"\u2705 Step 2 Start Cql Proxy"},{"location":"apache-airflow/#step-3-create-a-new-connection-in-apache-airflow","text":"Inside Apache Airflow, click Connections from underneath the Admin drop-down menu. Then click on the blue button labeled with the plus sign ( + ) to add a new connection. Fill out the form as shown in Figure 2: Connection Id: A unique identifier for the connection in Apache Airflow, which will be referenced inside the DAG code. We will use \u201ccassandra_cqlproxy.\u201d Connection Type: Select \u201cCassandra\u201d from the drop-down. If it is not present, you will have to install Airflow\u2019s Cassandra provider. Host: The listen address that cql-proxy is bound to. In this case, that is \u201c127.0.0.1.\u201d Schema: The Cassandra keyspace which we created in Astra DB. We\u2019ll set that to \u201cairflow\u201d in this case. Login: Your Astra DB client id. Password: Your Astra DB client secret. Port: The port that cql-proxy is listening on for the CQL native binary protocol, most likely 9042. Figure 2 - Create a new Cassandra connection for Apache Airflow. Click the blue Save button to persist the new connection.","title":"\u2705 Step 3 Create a new connection in Apache Airflow"},{"location":"apache-airflow/#step-4-create-a-new-dag-in-apache-airflow","text":"A directed acyclic graph (DAG) is essentially a Python script which imports one or more libraries specific to Airflow. To create a new DAG, first locate your DAG directory. By default, Airflow looks for custom DAGs in the ~/airflow/dags/ directory. For testing, there is a sample DAG out in the following GitHub repository: https://github.com/aar0np/DS_Python_stuff/blob/main/cassandra_test_dag.py This DAG uses the following line to reference the Cassandra connection we created in the above step: hook = CassandraHook('cassandra_cqlproxy') The other important aspect is that this DAG sets its unique identifier as cass_hooks_tutorial : with DAG( 'cass_hooks_tutorial', It also specifically creates two unique tasks: check_table_exists query_system_local","title":"\u2705 Step 4 Create a new DAG in Apache Airflow"},{"location":"apache-airflow/#step-5-final-test","text":"To test the connection, copy the DAG mentioned above into the /dags/ directory. Then we will invoke Airflow\u2019s task testing functionality, by running airflow tasks test and specifying: The DAG\u2019s unique identifier The name of the task to be run The execution date If today\u2019s date is 2022-02-08, the command looks like this: airflow tasks test cass_hooks_tutorial check_table_exists 2022-02-08 Many messages will go by quickly. If it worked, the final messages should look something like this: INFO - Done. Returned value was: True INFO - Marking task as SUCCESS. dag_id=cass_hooks_tutorial, task_id=check_table_exists, execution_date=20220208T000000, start_date=20220208T195333, end_date=20220208T195334","title":"\u2705 Step 5 Final Test"},{"location":"apache-airflow/#d-acknowledgements","text":"Special thanks goes out to Obioma Anomnachi of Anant. Obi\u2019s video and GitHub repo proved quite helpful in building out this tutorial.","title":"D - Acknowledgements"},{"location":"create-instance/","text":"Written by Cedrick Lunven , Last Update 2/10/2022 Reference documentation A - Overview \u00b6 ASTRA DB is the simplest way to run Cassandra with zero operations at all - just push the button and get your cluster. No credit card required, $25.00 USD credit every month, roughly 5M writes, 30M reads, 40GB storage monthly - sufficient to run small production workloads. B - Prerequisites \u00b6 You should have an Astra account . If you don't have one yet, keep reading and we'll show you how to create it. C - Procedure \u00b6 \u2705 Step 1:Click the sign-in button to login or register. \u00b6 You can use your Github , Google accounts or register with an email . With the latest make sure to chose a password with minimum 8 characters, containing upper and lowercase letters, at least one number and special character. If you already have an Astra account, skip this step, locate and click the \"Create Database\" button on the left-side navigation bar of your Astra UI, and read next step. \u2705 Step 2: Complete the creation form \u00b6 As you create a new account, you will be prompted to create a database; you will see the same form if you simply hit the \"Create database\" button in your existing Astra account. \u2139\ufe0f Fields Description Field Description database name It does not need to be unique and not used to initialize a connection but only a label (Between 2 and 50 characters). It is recommended to have a database for each of your application. The free tier is limited to 5 databases. keyspace It is a logical grouping of your tables. (Between 2 and 48 characters), Please use lower cases and snake_case . Cloud Provider Use the one you like, click a cloud provider logo, pick an Area in the list and finally pick a region. We recommend to pick one the closes to you to readuce latencies but in free tier very few difference. \u2139\ufe0f Create Database button becomes enabled only when all fields are filled properly. Please use only lower cases and no space for a keyspace name. \u2139\ufe0f You will see your new database pending in the Dashboard.The status will change to Active when the database is ready, this will only take 2-3 minutes. You will also receive an email when it is ready. \ud83d\udc41\ufe0f Walkthrough","title":"Create Database"},{"location":"create-instance/#a-overview","text":"ASTRA DB is the simplest way to run Cassandra with zero operations at all - just push the button and get your cluster. No credit card required, $25.00 USD credit every month, roughly 5M writes, 30M reads, 40GB storage monthly - sufficient to run small production workloads.","title":"A - Overview"},{"location":"create-instance/#b-prerequisites","text":"You should have an Astra account . If you don't have one yet, keep reading and we'll show you how to create it.","title":"B - Prerequisites"},{"location":"create-instance/#c-procedure","text":"","title":"C - Procedure"},{"location":"create-instance/#step-1click-the-sign-in-button-to-login-or-register","text":"You can use your Github , Google accounts or register with an email . With the latest make sure to chose a password with minimum 8 characters, containing upper and lowercase letters, at least one number and special character. If you already have an Astra account, skip this step, locate and click the \"Create Database\" button on the left-side navigation bar of your Astra UI, and read next step.","title":"\u2705 Step 1:Click the sign-in button to login or register."},{"location":"create-instance/#step-2-complete-the-creation-form","text":"As you create a new account, you will be prompted to create a database; you will see the same form if you simply hit the \"Create database\" button in your existing Astra account. \u2139\ufe0f Fields Description Field Description database name It does not need to be unique and not used to initialize a connection but only a label (Between 2 and 50 characters). It is recommended to have a database for each of your application. The free tier is limited to 5 databases. keyspace It is a logical grouping of your tables. (Between 2 and 48 characters), Please use lower cases and snake_case . Cloud Provider Use the one you like, click a cloud provider logo, pick an Area in the list and finally pick a region. We recommend to pick one the closes to you to readuce latencies but in free tier very few difference. \u2139\ufe0f Create Database button becomes enabled only when all fields are filled properly. Please use only lower cases and no space for a keyspace name. \u2139\ufe0f You will see your new database pending in the Dashboard.The status will change to Active when the database is ready, this will only take 2-3 minutes. You will also receive an email when it is ready. \ud83d\udc41\ufe0f Walkthrough","title":"\u2705 Step 2: Complete the creation form"},{"location":"language-csharp/","text":"1. Overview \u00b6 Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here . 2. Interfaces List \u00b6 Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming 3. CQL \u00b6 3.1 Cassandra Drivers \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 3.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4. Stargate REST Api \u00b6 4.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5. Stargate Document Api \u00b6 5.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6 Stargate GraphQL \u00b6 6.1 CQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6.2 GraphQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7. Stargate gRPC \u00b6 7.1 Stargate Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8. Pulsar Client \u00b6 8.1 Pulsar Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 9. Pulsar Admin \u00b6 10 Devops API Database \u00b6 11 Devops API Organization \u00b6 12 Devops API Streaming \u00b6","title":"CSharp"},{"location":"language-csharp/#1-overview","text":"Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here .","title":"1. Overview"},{"location":"language-csharp/#2-interfaces-list","text":"Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming","title":"2. Interfaces List"},{"location":"language-csharp/#3-cql","text":"","title":"3. CQL"},{"location":"language-csharp/#31-cassandra-drivers","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.1 Cassandra Drivers"},{"location":"language-csharp/#32-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.2 Astra SDK"},{"location":"language-csharp/#4-stargate-rest-api","text":"","title":"4. Stargate REST Api"},{"location":"language-csharp/#41-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.1 Axios"},{"location":"language-csharp/#42-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.2 Astra SDK"},{"location":"language-csharp/#5-stargate-document-api","text":"","title":"5. Stargate Document Api"},{"location":"language-csharp/#51-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.1 Axios"},{"location":"language-csharp/#52-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.2 Astra SDK"},{"location":"language-csharp/#6-stargate-graphql","text":"","title":"6 Stargate GraphQL"},{"location":"language-csharp/#61-cql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.1 CQL First"},{"location":"language-csharp/#62-graphql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.2 GraphQL First"},{"location":"language-csharp/#7-stargate-grpc","text":"","title":"7. Stargate gRPC"},{"location":"language-csharp/#71-stargate-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.1 Stargate Client"},{"location":"language-csharp/#72-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.2 Astra SDK"},{"location":"language-csharp/#8-pulsar-client","text":"","title":"8. Pulsar Client"},{"location":"language-csharp/#81-pulsar-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.1 Pulsar Client"},{"location":"language-csharp/#82-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.2 Astra SDK"},{"location":"language-csharp/#9-pulsar-admin","text":"","title":"9. Pulsar Admin"},{"location":"language-csharp/#10-devops-api-database","text":"","title":"10 Devops API Database"},{"location":"language-csharp/#11-devops-api-organization","text":"","title":"11 Devops API Organization"},{"location":"language-csharp/#12-devops-api-streaming","text":"","title":"12 Devops API Streaming"},{"location":"language-go/","text":"1. Overview \u00b6 Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here . 2. Interfaces List \u00b6 Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming 3. CQL \u00b6 3.1 Cassandra Drivers \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 3.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4. Stargate REST Api \u00b6 4.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5. Stargate Document Api \u00b6 5.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6 Stargate GraphQL \u00b6 6.1 CQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6.2 GraphQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7. Stargate gRPC \u00b6 7.1 Stargate Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8. Pulsar Client \u00b6 8.1 Pulsar Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 9. Pulsar Admin \u00b6 10 Devops API Database \u00b6 11 Devops API Organization \u00b6 12 Devops API Streaming \u00b6 package main import ( \"archive/zip\" \"context\" \"crypto/tls\" \"crypto/x509\" \"encoding/json\" \"fmt\" \"io\" \"io/ioutil\" \"os\" \"path/filepath\" \"strconv\" \"strings\" \"github.com/gocql/gocql\" ) type Config struct { Host string `json:\"host\"` Port int `json:\"cql_port\"` } func main () { var clientID = os . Getenv ( \"ASTRA_CLIENT_ID\" ) var clientSecret = os . Getenv ( \"ASTRA_CLIENT_SECRET\" ) var secureConnectBundle = os . Getenv ( \"SECURE_CONNECT_BUNDLE\" ) if clientID == \"\" || clientSecret == \"\" || secureConnectBundle == \"\" { panic ( \"missing required environment variables\" ) } secureBundleDir := os . TempDir () fmt . Printf ( \"extracting secure connect bundle [%s] to [%s]\\n\" , secureConnectBundle , secureBundleDir ) if err := Unzip ( secureConnectBundle , secureBundleDir ); err != nil { panic ( err ) } configPath , _ := filepath . Abs ( secureBundleDir + \"/config.json\" ) fmt . Println ( \"config: \" + configPath ) configData , _ := ioutil . ReadFile ( configPath ) var cfg Config json . Unmarshal ( configData , & cfg ) cluster := gocql . NewCluster ( cfg . Host ) cluster . Authenticator = gocql . PasswordAuthenticator { Username : clientID , Password : clientSecret , } host := cfg . Host + \":\" + strconv . Itoa ( cfg . Port ) cluster . Hosts = [] string { host } fmt . Println ( \"connecting to: \" + host ) certPath , _ := filepath . Abs ( secureBundleDir + \"/cert\" ) keyPath , _ := filepath . Abs ( secureBundleDir + \"/key\" ) caPath , _ := filepath . Abs ( secureBundleDir + \"/ca.crt\" ) cert , _ := tls . LoadX509KeyPair ( certPath , keyPath ) caCert , _ := ioutil . ReadFile ( caPath ) caCertPool := x509 . NewCertPool () caCertPool . AppendCertsFromPEM ( caCert ) cluster . SslOpts = & gocql . SslOptions { Config : & tls . Config { Certificates : [] tls . Certificate { cert }, ServerName : cfg . Host , RootCAs : caCertPool , }, } session , err := cluster . CreateSession () if err != nil { panic ( err ) } fmt . Printf ( \"session established: %v\\n\" , session ) var releaseVersion string if err := session . Query ( \"select release_version from system.local\" ). WithContext ( context . Background ()). Consistency ( gocql . One ). Scan ( & releaseVersion ); err != nil { panic ( err ) } fmt . Printf ( \"release version: %s\\n\" , releaseVersion ) } func Unzip ( src , dest string ) error { r , err := zip . OpenReader ( src ) if err != nil { return err } defer func () { if err := r . Close (); err != nil { panic ( err ) } }() os . MkdirAll ( dest , 0755 ) // Closure to address file descriptors issue with all the deferred .Close() methods extractAndWriteFile := func ( f * zip . File ) error { rc , err := f . Open () if err != nil { return err } defer func () { if err := rc . Close (); err != nil { panic ( err ) } }() path := filepath . Join ( dest , f . Name ) // Check for ZipSlip (Directory traversal) if ! strings . HasPrefix ( path , filepath . Clean ( dest ) + string ( os . PathSeparator )) { return fmt . Errorf ( \"illegal file path: %s\" , path ) } if f . FileInfo (). IsDir () { os . MkdirAll ( path , f . Mode ()) } else { os . MkdirAll ( filepath . Dir ( path ), f . Mode ()) f , err := os . OpenFile ( path , os . O_WRONLY | os . O_CREATE | os . O_TRUNC , f . Mode ()) if err != nil { return err } defer func () { if err := f . Close (); err != nil { panic ( err ) } }() _ , err = io . Copy ( f , rc ) if err != nil { return err } } return nil } for _ , f := range r . File { err := extractAndWriteFile ( f ) if err != nil { return err } } return nil }","title":"GoLang"},{"location":"language-go/#1-overview","text":"Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here .","title":"1. Overview"},{"location":"language-go/#2-interfaces-list","text":"Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming","title":"2. Interfaces List"},{"location":"language-go/#3-cql","text":"","title":"3. CQL"},{"location":"language-go/#31-cassandra-drivers","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.1 Cassandra Drivers"},{"location":"language-go/#32-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.2 Astra SDK"},{"location":"language-go/#4-stargate-rest-api","text":"","title":"4. Stargate REST Api"},{"location":"language-go/#41-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.1 Axios"},{"location":"language-go/#42-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.2 Astra SDK"},{"location":"language-go/#5-stargate-document-api","text":"","title":"5. Stargate Document Api"},{"location":"language-go/#51-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.1 Axios"},{"location":"language-go/#52-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.2 Astra SDK"},{"location":"language-go/#6-stargate-graphql","text":"","title":"6 Stargate GraphQL"},{"location":"language-go/#61-cql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.1 CQL First"},{"location":"language-go/#62-graphql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.2 GraphQL First"},{"location":"language-go/#7-stargate-grpc","text":"","title":"7. Stargate gRPC"},{"location":"language-go/#71-stargate-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.1 Stargate Client"},{"location":"language-go/#72-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.2 Astra SDK"},{"location":"language-go/#8-pulsar-client","text":"","title":"8. Pulsar Client"},{"location":"language-go/#81-pulsar-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.1 Pulsar Client"},{"location":"language-go/#82-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.2 Astra SDK"},{"location":"language-go/#9-pulsar-admin","text":"","title":"9. Pulsar Admin"},{"location":"language-go/#10-devops-api-database","text":"","title":"10 Devops API Database"},{"location":"language-go/#11-devops-api-organization","text":"","title":"11 Devops API Organization"},{"location":"language-go/#12-devops-api-streaming","text":"package main import ( \"archive/zip\" \"context\" \"crypto/tls\" \"crypto/x509\" \"encoding/json\" \"fmt\" \"io\" \"io/ioutil\" \"os\" \"path/filepath\" \"strconv\" \"strings\" \"github.com/gocql/gocql\" ) type Config struct { Host string `json:\"host\"` Port int `json:\"cql_port\"` } func main () { var clientID = os . Getenv ( \"ASTRA_CLIENT_ID\" ) var clientSecret = os . Getenv ( \"ASTRA_CLIENT_SECRET\" ) var secureConnectBundle = os . Getenv ( \"SECURE_CONNECT_BUNDLE\" ) if clientID == \"\" || clientSecret == \"\" || secureConnectBundle == \"\" { panic ( \"missing required environment variables\" ) } secureBundleDir := os . TempDir () fmt . Printf ( \"extracting secure connect bundle [%s] to [%s]\\n\" , secureConnectBundle , secureBundleDir ) if err := Unzip ( secureConnectBundle , secureBundleDir ); err != nil { panic ( err ) } configPath , _ := filepath . Abs ( secureBundleDir + \"/config.json\" ) fmt . Println ( \"config: \" + configPath ) configData , _ := ioutil . ReadFile ( configPath ) var cfg Config json . Unmarshal ( configData , & cfg ) cluster := gocql . NewCluster ( cfg . Host ) cluster . Authenticator = gocql . PasswordAuthenticator { Username : clientID , Password : clientSecret , } host := cfg . Host + \":\" + strconv . Itoa ( cfg . Port ) cluster . Hosts = [] string { host } fmt . Println ( \"connecting to: \" + host ) certPath , _ := filepath . Abs ( secureBundleDir + \"/cert\" ) keyPath , _ := filepath . Abs ( secureBundleDir + \"/key\" ) caPath , _ := filepath . Abs ( secureBundleDir + \"/ca.crt\" ) cert , _ := tls . LoadX509KeyPair ( certPath , keyPath ) caCert , _ := ioutil . ReadFile ( caPath ) caCertPool := x509 . NewCertPool () caCertPool . AppendCertsFromPEM ( caCert ) cluster . SslOpts = & gocql . SslOptions { Config : & tls . Config { Certificates : [] tls . Certificate { cert }, ServerName : cfg . Host , RootCAs : caCertPool , }, } session , err := cluster . CreateSession () if err != nil { panic ( err ) } fmt . Printf ( \"session established: %v\\n\" , session ) var releaseVersion string if err := session . Query ( \"select release_version from system.local\" ). WithContext ( context . Background ()). Consistency ( gocql . One ). Scan ( & releaseVersion ); err != nil { panic ( err ) } fmt . Printf ( \"release version: %s\\n\" , releaseVersion ) } func Unzip ( src , dest string ) error { r , err := zip . OpenReader ( src ) if err != nil { return err } defer func () { if err := r . Close (); err != nil { panic ( err ) } }() os . MkdirAll ( dest , 0755 ) // Closure to address file descriptors issue with all the deferred .Close() methods extractAndWriteFile := func ( f * zip . File ) error { rc , err := f . Open () if err != nil { return err } defer func () { if err := rc . Close (); err != nil { panic ( err ) } }() path := filepath . Join ( dest , f . Name ) // Check for ZipSlip (Directory traversal) if ! strings . HasPrefix ( path , filepath . Clean ( dest ) + string ( os . PathSeparator )) { return fmt . Errorf ( \"illegal file path: %s\" , path ) } if f . FileInfo (). IsDir () { os . MkdirAll ( path , f . Mode ()) } else { os . MkdirAll ( filepath . Dir ( path ), f . Mode ()) f , err := os . OpenFile ( path , os . O_WRONLY | os . O_CREATE | os . O_TRUNC , f . Mode ()) if err != nil { return err } defer func () { if err := f . Close (); err != nil { panic ( err ) } }() _ , err = io . Copy ( f , rc ) if err != nil { return err } } return nil } for _ , f := range r . File { err := extractAndWriteFile ( f ) if err != nil { return err } } return nil }","title":"12 Devops API Streaming"},{"location":"language-java/","text":"1. Overview \u00b6 Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here . 2. Interfaces list \u00b6 Pick the interface you want to use from the list: Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage users and roles Astra Core Manage Databases Astra Core Manage Streaming 3. CQL Cassandra Drivers \u00b6 Drivers reference documentation can be found HERE , this page is focused on connectivity with Astra DB only. 3.1 Drivers version 4.x \u00b6 Version 4.x is the recommended version Version 4 is major redesign of the internal architecture. As such, it is not binary compatible with previous versions. However, most of the concepts remain unchanged, and the new API will look very familiar to 2.x and 3.x users. If you want to know more the rational is explained in this blogpost . If you are still using 3.x and want to migrate you can have a look the upgrade guide but you can also keep using 3.x as described below \ud83d\udce6 Prerequisites [ASTRA] You should have an Astra account You should Create and Astra Database You should Have an Astra Token You should Download your Secure bundle \ud83d\udce6 Prerequisites [Development Environment] You should install Java Development Kit (JDK) 8 : Use the reference documentation to install a Java Development Kit , Validate your installation with java --version You should install Apache Maven : Use the reference documentation and validate your installation with mvn -version \ud83d\udce6 Setup Project Any version 4.x should be compatible with Astra. Update your pom.xml file with the latest version of the 4.x libraries: <!-- (REQUIRED) --> <dependency> <groupId> com.datastax.oss </groupId> <artifactId> java-driver-core </artifactId> <version> ${latest4x} </version> </dependency> <!-- OPTIONAL --> <dependency> <groupId> com.datastax.oss </groupId> <artifactId> java-driver-query-builder </artifactId> <version> ${latest4x} </version> </dependency> <dependency> <groupId> com.datastax.oss </groupId> <artifactId> java-driver-mapper-runtime </artifactId> <version> ${latest4x} </version> </dependency> \ud83d\udda5\ufe0f Sample Code (project astra-driver4x ) import java.nio.file.Paths ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import com.datastax.oss.driver.api.core.CqlSession ; public class AstraDriver4x { static final String ASTRA_ZIP_FILE = \"<path_to_secureConnectBundle.zip>\" ; static final String ASTRA_USERNAME = \"<provide_a_clientId>\" ; static final String ASTRA_PASSWORD = \"<provide_a_clientSecret>\" ; static final String ASTRA_KEYSPACE = \"<provide_your_keyspace>\" ; public static void main ( String [] args ) { Logger logger = LoggerFactory . getLogger ( AstraDriver4x . class ); try ( CqlSession cqlSession = CqlSession . builder () . withCloudSecureConnectBundle ( Paths . get ( ASTRA_ZIP_FILE )) . withAuthCredentials ( ASTRA_USERNAME , ASTRA_PASSWORD ) . withKeyspace ( ASTRA_KEYSPACE ) . build ()) { logger . info ( \"[OK] Welcome to ASTRA. Connected to Keyspace {}\" , cqlSession . getKeyspace (). get ()); } logger . info ( \"[OK] Success\" ); System . exit ( 0 ); } } \ud83d\udd17 Extra Resources for Cassandra Drivers 4.x Multiple Standalone Classes using driver 4.x Spring PetClinic in Reactive and specially the mapper \u23eb Back to top 3.2 Drivers version 3.x \u00b6 \ud83d\udce6 Prerequisites [ASTRA] You should have an Astra account You should Create and Astra Database You should Have an Astra Token You should Download your Secure bundle \ud83d\udce6 Prerequisites [Development Environment] You should install Java Development Kit (JDK) 8 : Use the reference documentation to install a Java Development Kit , Validate your installation with java --version You should install Apache Maven : Use the reference documentation and validate your installation with mvn -version \ud83d\udce6 Setup Project Please note that version 3.8+ is required to connect to Astra. Update your pom.xml file with the latest version of the 3.x libraries: <dependency> <groupId> com.datastax.cassandra </groupId> <artifactId> cassandra-driver-core </artifactId> <version> ${latest3x} </version> </dependency> \ud83d\udda5\ufe0f Sample Code (project astra-driver3x ) import java.io.File ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import com.datastax.driver.core.Cluster ; import com.datastax.driver.core.Session ; public class AstraDriver3x { // Define inputs static final String ASTRA_ZIP_FILE = \"<path_to_secureConnectBundle.zip>\" ; static final String ASTRA_USERNAME = \"<provide_a_clientId>\" ; static final String ASTRA_PASSWORD = \"<provide_a_clientSecret>\" ; static final String ASTRA_KEYSPACE = \"<provide_your_keyspace>\" ; public static void main ( String [] args ) { Logger logger = LoggerFactory . getLogger ( AstraDriver3x . class ); try ( Cluster cluster = Cluster . builder () . withCloudSecureConnectBundle ( new File ( ASTRA_ZIP_FILE )) . withCredentials ( ASTRA_USERNAME , ASTRA_PASSWORD ) . build () ) { Session session = cluster . connect ( ASTRA_KEYSPACE ); logger . info ( \"[OK] Welcome to ASTRA. Connected to Keyspace {}\" , session . getLoggedKeyspace ()); } logger . info ( \"[OK] Success\" ); System . exit ( 0 ); } } \ud83d\udd17 Extra Resources for Cassandra Drivers 3.x Multiple Standalone Classes using driver 3.x \u23eb Back to top 3.3 Astra SDK \u00b6 TODO 4. Stargate REST Api \u00b6 \u2139\ufe0f Overview Stargate is a data gateway (Proxy) on top of Apache Cassandra exposing new interface to ease the integration. It is a way to create stateless components (1) and ease the integration with 4 different HTTP Apis (rest, doc, graphQL, gRPC). In this chapter we will cover integration with REST Apis also called DATA in the swagger specifications. To know more regarding this interface specially you can have a look to dedicated section of the wiki or reference Stargate Rest Api Quick Start Guide . \u26a0\ufe0f We recommend to use version V2 ( with V2 in the URL ) as it covers more features and the V1 would be deprecated sooner. \ud83d\udce6 Prerequisites [ASTRA] You should have an Astra account You should Create and Astra Database You should Have an Astra Token \ud83d\udce6 Prerequisites [Development Environment] You should install Java Development Kit (JDK) 8 : Use the reference documentation to install a Java Development Kit . You should install Apache Maven : Use the reference documentation and validate your installation with mvn -version \ud83d\udce6 Setup Project You simple need an HTTP Client to use the Rest API. There are a lot in the Java languages like HttpURLConnection , HttpClient introduced in Java 11 , Apache HTTPClient , OkHttpClient , Jetty HttpClient . A comparison is provided is this blogpost to make your choice. In this tutorial we will go with Apache HttpClient , this is the one used in the SDK, you should adapt the code depending on the framework you choosed. Import relevant dependencies for Apache Http Client in your pom.xml <dependency> <groupId> org.apache.httpcomponents.client5 </groupId> <artifactId> httpclient5 </artifactId> <version> 5.1.3 </version> </dependency> \ud83d\udda5\ufe0f Sample Code (project astra-httpclient-restapi ) public class AstraRestApiHttpClient { static final String ASTRA_TOKEN = \"<change_with_your_token>\" ; static final String ASTRA_DB_ID = \"<change_with_your_database_identifier>\" ; static final String ASTRA_DB_REGION = \"<change_with_your_database_region>\" ; static final String ASTRA_DB_KEYSPACE = \"<change_with_your_keyspace>\" ; static Logger logger = LoggerFactory . getLogger ( AstraRestApiHttpClient . class ); public static void main ( String [] args ) throws Exception { String apiRestEndpoint = new StringBuilder ( \"https://\" ) . append ( ASTRA_DB_ID ). append ( \"-\" ) . append ( ASTRA_DB_REGION ) . append ( \".apps.astra.datastax.com/api/rest\" ) . toString (); logger . info ( \"Rest Endpoint is {}\" , apiRestEndpoint ); try ( CloseableHttpClient httpClient = HttpClients . createDefault ()) { listKeyspaces ( httpClient , apiRestEndpoint ); createTable ( httpClient , apiRestEndpoint ); insertRow ( httpClient , apiRestEndpoint ); retrieveRow ( httpClient , apiRestEndpoint ); } logger . info ( \"[OK] Success\" ); System . exit ( 0 ); } List keyspaces private static void listKeyspaces ( CloseableHttpClient httpClient , String apiRestEndpoint ) throws Exception { // Build Request HttpGet listKeyspacesReq = new HttpGet ( apiRestEndpoint + \"/v2/schemas/keyspaces\" ); listKeyspacesReq . addHeader ( \"X-Cassandra-Token\" , ASTRA_TOKEN ); // Execute Request try ( CloseableHttpResponse res = httpClient . execute ( listKeyspacesReq )) { if ( 200 == res . getCode ()) { logger . info ( \"[OK] Keyspaces list retrieved\" ); logger . info ( \"Returned message: {}\" , EntityUtils . toString ( res . getEntity ())); } } } Create a Table Query used is createTableJson here: { \"name\" : \"users\" , \"columnDefinitions\" : [ { \"name\" : \"firstname\" , \"typeDefinition\" : \"text\" }, { \"name\" : \"lastname\" , \"typeDefinition\" : \"text\" }, { \"name\" : \"email\" , \"typeDefinition\" : \"text\" }, { \"name\" : \"color\" , \"typeDefinition\" : \"text\" } ], \"primaryKey\" : { \"partitionKey\" : [ \"firstname\" ], \"clusteringKey\" : [ \"lastname\" ] }, \"tableOptions\" : { \"defaultTimeToLive\" : 0 , \"clusteringExpression\" : [{ \"column\" : \"lastname\" , \"order\" : \"ASC\" }] } } Create Table code private static void createTable ( CloseableHttpClient httpClient , String apiRestEndpoint ) throws Exception { HttpPost createTableReq = new HttpPost ( apiRestEndpoint + \"/v2/schemas/keyspaces/\" + ASTRA_DB_KEYSPACE + \"/tables\" ); createTableReq . addHeader ( \"X-Cassandra-Token\" , ASTRA_TOKEN ); String createTableJson = \"{...JSON.....}\" ; createTableReq . setEntity ( new StringEntity ( createTableJson , ContentType . APPLICATION_JSON )); // Execute Request try ( CloseableHttpResponse res = httpClient . execute ( createTableReq )) { if ( 201 == res . getCode ()) { logger . info ( \"[OK] Table Created (if needed)\" ); logger . info ( \"Returned message: {}\" , EntityUtils . toString ( res . getEntity ())); } } } Insert a Row private static void insertRow ( CloseableHttpClient httpClient , String apiRestEndpoint ) throws Exception { HttpPost insertCedrick = new HttpPost ( apiRestEndpoint + \"/v2/keyspaces/\" + ASTRA_DB_KEYSPACE + \"/users\" ); insertCedrick . addHeader ( \"X-Cassandra-Token\" , ASTRA_TOKEN ); insertCedrick . setEntity ( new StringEntity ( \"{\" + \" \\\"firstname\\\": \\\"Cedrick\\\",\" + \" \\\"lastname\\\" : \\\"Lunven\\\",\" + \" \\\"email\\\" : \\\"c.lunven@gmail.com\\\",\" + \" \\\"color\\\" : \\\"blue\\\" }\" , ContentType . APPLICATION_JSON )); // Execute Request try ( CloseableHttpResponse res = httpClient . execute ( insertCedrick )) { if ( 201 == res . getCode ()) { logger . info ( \"[OK] Row inserted\" ); logger . info ( \"Returned message: {}\" , EntityUtils . toString ( res . getEntity ())); } } } Retrieve a row private static void retrieveRow ( CloseableHttpClient httpClient , String apiRestEndpoint ) throws Exception { // Build Request HttpGet rowReq = new HttpGet ( apiRestEndpoint + \"/v2/keyspaces/\" + ASTRA_DB_KEYSPACE + \"/users/Cedrick/Lunven\" ); rowReq . addHeader ( \"X-Cassandra-Token\" , ASTRA_TOKEN ); // Execute Request try ( CloseableHttpResponse res = httpClient . execute ( rowReq )) { if ( 200 == res . getCode ()) { String payload = EntityUtils . toString ( res . getEntity ()); logger . info ( \"[OK] Row retrieved\" ); logger . info ( \"Row retrieved : {}\" , payload ); } } } \u23eb Back to top 5. Stargate Document Api \u00b6 \u2139\ufe0f Overview api XXX \ud83d\udce6 Prerequisites [ASTRA] You should have an Astra account You should Create and Astra Database You should Have an Astra Token \ud83d\udce6 Prerequisites [Development Environment] You should install Java Development Kit (JDK) 8 : Use the reference documentation to install a Java Development Kit . You should install Apache Maven : Use the reference documentation and validate your installation with mvn -version \ud83d\udce6 Setup Project Import relevant dependencies for Apache Http Client in your pom.xml . Jackon is also helpful to serialize or unserialized Java Objects as JSON. <dependency> <groupId> org.apache.httpcomponents.client5 </groupId> <artifactId> httpclient5 </artifactId> <version> 5.1.3 </version> </dependency> \ud83d\udda5\ufe0f Sample Code (project astra-httpclient-docapi ) \u23eb Back to top 6 Stargate GraphQL \u00b6 6.1 CQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6.2 GraphQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7. Stargate gRPC \u00b6 7.1 Stargate Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8. Pulsar Client \u00b6 8.1 Pulsar Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 9. Pulsar Admin \u00b6 10 Devops API Database \u00b6 11 Devops API Organization \u00b6 12 Devops API Streaming \u00b6","title":"Java"},{"location":"language-java/#1-overview","text":"Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here .","title":"1. Overview"},{"location":"language-java/#2-interfaces-list","text":"Pick the interface you want to use from the list: Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage users and roles Astra Core Manage Databases Astra Core Manage Streaming","title":"2. Interfaces list"},{"location":"language-java/#3-cql-cassandra-drivers","text":"Drivers reference documentation can be found HERE , this page is focused on connectivity with Astra DB only.","title":"3. CQL Cassandra Drivers"},{"location":"language-java/#31-drivers-version-4x","text":"Version 4.x is the recommended version Version 4 is major redesign of the internal architecture. As such, it is not binary compatible with previous versions. However, most of the concepts remain unchanged, and the new API will look very familiar to 2.x and 3.x users. If you want to know more the rational is explained in this blogpost . If you are still using 3.x and want to migrate you can have a look the upgrade guide but you can also keep using 3.x as described below \ud83d\udce6 Prerequisites [ASTRA] You should have an Astra account You should Create and Astra Database You should Have an Astra Token You should Download your Secure bundle \ud83d\udce6 Prerequisites [Development Environment] You should install Java Development Kit (JDK) 8 : Use the reference documentation to install a Java Development Kit , Validate your installation with java --version You should install Apache Maven : Use the reference documentation and validate your installation with mvn -version \ud83d\udce6 Setup Project Any version 4.x should be compatible with Astra. Update your pom.xml file with the latest version of the 4.x libraries: <!-- (REQUIRED) --> <dependency> <groupId> com.datastax.oss </groupId> <artifactId> java-driver-core </artifactId> <version> ${latest4x} </version> </dependency> <!-- OPTIONAL --> <dependency> <groupId> com.datastax.oss </groupId> <artifactId> java-driver-query-builder </artifactId> <version> ${latest4x} </version> </dependency> <dependency> <groupId> com.datastax.oss </groupId> <artifactId> java-driver-mapper-runtime </artifactId> <version> ${latest4x} </version> </dependency> \ud83d\udda5\ufe0f Sample Code (project astra-driver4x ) import java.nio.file.Paths ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import com.datastax.oss.driver.api.core.CqlSession ; public class AstraDriver4x { static final String ASTRA_ZIP_FILE = \"<path_to_secureConnectBundle.zip>\" ; static final String ASTRA_USERNAME = \"<provide_a_clientId>\" ; static final String ASTRA_PASSWORD = \"<provide_a_clientSecret>\" ; static final String ASTRA_KEYSPACE = \"<provide_your_keyspace>\" ; public static void main ( String [] args ) { Logger logger = LoggerFactory . getLogger ( AstraDriver4x . class ); try ( CqlSession cqlSession = CqlSession . builder () . withCloudSecureConnectBundle ( Paths . get ( ASTRA_ZIP_FILE )) . withAuthCredentials ( ASTRA_USERNAME , ASTRA_PASSWORD ) . withKeyspace ( ASTRA_KEYSPACE ) . build ()) { logger . info ( \"[OK] Welcome to ASTRA. Connected to Keyspace {}\" , cqlSession . getKeyspace (). get ()); } logger . info ( \"[OK] Success\" ); System . exit ( 0 ); } } \ud83d\udd17 Extra Resources for Cassandra Drivers 4.x Multiple Standalone Classes using driver 4.x Spring PetClinic in Reactive and specially the mapper \u23eb Back to top","title":"3.1 Drivers version 4.x"},{"location":"language-java/#32-drivers-version-3x","text":"\ud83d\udce6 Prerequisites [ASTRA] You should have an Astra account You should Create and Astra Database You should Have an Astra Token You should Download your Secure bundle \ud83d\udce6 Prerequisites [Development Environment] You should install Java Development Kit (JDK) 8 : Use the reference documentation to install a Java Development Kit , Validate your installation with java --version You should install Apache Maven : Use the reference documentation and validate your installation with mvn -version \ud83d\udce6 Setup Project Please note that version 3.8+ is required to connect to Astra. Update your pom.xml file with the latest version of the 3.x libraries: <dependency> <groupId> com.datastax.cassandra </groupId> <artifactId> cassandra-driver-core </artifactId> <version> ${latest3x} </version> </dependency> \ud83d\udda5\ufe0f Sample Code (project astra-driver3x ) import java.io.File ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import com.datastax.driver.core.Cluster ; import com.datastax.driver.core.Session ; public class AstraDriver3x { // Define inputs static final String ASTRA_ZIP_FILE = \"<path_to_secureConnectBundle.zip>\" ; static final String ASTRA_USERNAME = \"<provide_a_clientId>\" ; static final String ASTRA_PASSWORD = \"<provide_a_clientSecret>\" ; static final String ASTRA_KEYSPACE = \"<provide_your_keyspace>\" ; public static void main ( String [] args ) { Logger logger = LoggerFactory . getLogger ( AstraDriver3x . class ); try ( Cluster cluster = Cluster . builder () . withCloudSecureConnectBundle ( new File ( ASTRA_ZIP_FILE )) . withCredentials ( ASTRA_USERNAME , ASTRA_PASSWORD ) . build () ) { Session session = cluster . connect ( ASTRA_KEYSPACE ); logger . info ( \"[OK] Welcome to ASTRA. Connected to Keyspace {}\" , session . getLoggedKeyspace ()); } logger . info ( \"[OK] Success\" ); System . exit ( 0 ); } } \ud83d\udd17 Extra Resources for Cassandra Drivers 3.x Multiple Standalone Classes using driver 3.x \u23eb Back to top","title":"3.2 Drivers version 3.x"},{"location":"language-java/#33-astra-sdk","text":"TODO","title":"3.3 Astra SDK"},{"location":"language-java/#4-stargate-rest-api","text":"\u2139\ufe0f Overview Stargate is a data gateway (Proxy) on top of Apache Cassandra exposing new interface to ease the integration. It is a way to create stateless components (1) and ease the integration with 4 different HTTP Apis (rest, doc, graphQL, gRPC). In this chapter we will cover integration with REST Apis also called DATA in the swagger specifications. To know more regarding this interface specially you can have a look to dedicated section of the wiki or reference Stargate Rest Api Quick Start Guide . \u26a0\ufe0f We recommend to use version V2 ( with V2 in the URL ) as it covers more features and the V1 would be deprecated sooner. \ud83d\udce6 Prerequisites [ASTRA] You should have an Astra account You should Create and Astra Database You should Have an Astra Token \ud83d\udce6 Prerequisites [Development Environment] You should install Java Development Kit (JDK) 8 : Use the reference documentation to install a Java Development Kit . You should install Apache Maven : Use the reference documentation and validate your installation with mvn -version \ud83d\udce6 Setup Project You simple need an HTTP Client to use the Rest API. There are a lot in the Java languages like HttpURLConnection , HttpClient introduced in Java 11 , Apache HTTPClient , OkHttpClient , Jetty HttpClient . A comparison is provided is this blogpost to make your choice. In this tutorial we will go with Apache HttpClient , this is the one used in the SDK, you should adapt the code depending on the framework you choosed. Import relevant dependencies for Apache Http Client in your pom.xml <dependency> <groupId> org.apache.httpcomponents.client5 </groupId> <artifactId> httpclient5 </artifactId> <version> 5.1.3 </version> </dependency> \ud83d\udda5\ufe0f Sample Code (project astra-httpclient-restapi ) public class AstraRestApiHttpClient { static final String ASTRA_TOKEN = \"<change_with_your_token>\" ; static final String ASTRA_DB_ID = \"<change_with_your_database_identifier>\" ; static final String ASTRA_DB_REGION = \"<change_with_your_database_region>\" ; static final String ASTRA_DB_KEYSPACE = \"<change_with_your_keyspace>\" ; static Logger logger = LoggerFactory . getLogger ( AstraRestApiHttpClient . class ); public static void main ( String [] args ) throws Exception { String apiRestEndpoint = new StringBuilder ( \"https://\" ) . append ( ASTRA_DB_ID ). append ( \"-\" ) . append ( ASTRA_DB_REGION ) . append ( \".apps.astra.datastax.com/api/rest\" ) . toString (); logger . info ( \"Rest Endpoint is {}\" , apiRestEndpoint ); try ( CloseableHttpClient httpClient = HttpClients . createDefault ()) { listKeyspaces ( httpClient , apiRestEndpoint ); createTable ( httpClient , apiRestEndpoint ); insertRow ( httpClient , apiRestEndpoint ); retrieveRow ( httpClient , apiRestEndpoint ); } logger . info ( \"[OK] Success\" ); System . exit ( 0 ); } List keyspaces private static void listKeyspaces ( CloseableHttpClient httpClient , String apiRestEndpoint ) throws Exception { // Build Request HttpGet listKeyspacesReq = new HttpGet ( apiRestEndpoint + \"/v2/schemas/keyspaces\" ); listKeyspacesReq . addHeader ( \"X-Cassandra-Token\" , ASTRA_TOKEN ); // Execute Request try ( CloseableHttpResponse res = httpClient . execute ( listKeyspacesReq )) { if ( 200 == res . getCode ()) { logger . info ( \"[OK] Keyspaces list retrieved\" ); logger . info ( \"Returned message: {}\" , EntityUtils . toString ( res . getEntity ())); } } } Create a Table Query used is createTableJson here: { \"name\" : \"users\" , \"columnDefinitions\" : [ { \"name\" : \"firstname\" , \"typeDefinition\" : \"text\" }, { \"name\" : \"lastname\" , \"typeDefinition\" : \"text\" }, { \"name\" : \"email\" , \"typeDefinition\" : \"text\" }, { \"name\" : \"color\" , \"typeDefinition\" : \"text\" } ], \"primaryKey\" : { \"partitionKey\" : [ \"firstname\" ], \"clusteringKey\" : [ \"lastname\" ] }, \"tableOptions\" : { \"defaultTimeToLive\" : 0 , \"clusteringExpression\" : [{ \"column\" : \"lastname\" , \"order\" : \"ASC\" }] } } Create Table code private static void createTable ( CloseableHttpClient httpClient , String apiRestEndpoint ) throws Exception { HttpPost createTableReq = new HttpPost ( apiRestEndpoint + \"/v2/schemas/keyspaces/\" + ASTRA_DB_KEYSPACE + \"/tables\" ); createTableReq . addHeader ( \"X-Cassandra-Token\" , ASTRA_TOKEN ); String createTableJson = \"{...JSON.....}\" ; createTableReq . setEntity ( new StringEntity ( createTableJson , ContentType . APPLICATION_JSON )); // Execute Request try ( CloseableHttpResponse res = httpClient . execute ( createTableReq )) { if ( 201 == res . getCode ()) { logger . info ( \"[OK] Table Created (if needed)\" ); logger . info ( \"Returned message: {}\" , EntityUtils . toString ( res . getEntity ())); } } } Insert a Row private static void insertRow ( CloseableHttpClient httpClient , String apiRestEndpoint ) throws Exception { HttpPost insertCedrick = new HttpPost ( apiRestEndpoint + \"/v2/keyspaces/\" + ASTRA_DB_KEYSPACE + \"/users\" ); insertCedrick . addHeader ( \"X-Cassandra-Token\" , ASTRA_TOKEN ); insertCedrick . setEntity ( new StringEntity ( \"{\" + \" \\\"firstname\\\": \\\"Cedrick\\\",\" + \" \\\"lastname\\\" : \\\"Lunven\\\",\" + \" \\\"email\\\" : \\\"c.lunven@gmail.com\\\",\" + \" \\\"color\\\" : \\\"blue\\\" }\" , ContentType . APPLICATION_JSON )); // Execute Request try ( CloseableHttpResponse res = httpClient . execute ( insertCedrick )) { if ( 201 == res . getCode ()) { logger . info ( \"[OK] Row inserted\" ); logger . info ( \"Returned message: {}\" , EntityUtils . toString ( res . getEntity ())); } } } Retrieve a row private static void retrieveRow ( CloseableHttpClient httpClient , String apiRestEndpoint ) throws Exception { // Build Request HttpGet rowReq = new HttpGet ( apiRestEndpoint + \"/v2/keyspaces/\" + ASTRA_DB_KEYSPACE + \"/users/Cedrick/Lunven\" ); rowReq . addHeader ( \"X-Cassandra-Token\" , ASTRA_TOKEN ); // Execute Request try ( CloseableHttpResponse res = httpClient . execute ( rowReq )) { if ( 200 == res . getCode ()) { String payload = EntityUtils . toString ( res . getEntity ()); logger . info ( \"[OK] Row retrieved\" ); logger . info ( \"Row retrieved : {}\" , payload ); } } } \u23eb Back to top","title":"4. Stargate REST Api"},{"location":"language-java/#5-stargate-document-api","text":"\u2139\ufe0f Overview api XXX \ud83d\udce6 Prerequisites [ASTRA] You should have an Astra account You should Create and Astra Database You should Have an Astra Token \ud83d\udce6 Prerequisites [Development Environment] You should install Java Development Kit (JDK) 8 : Use the reference documentation to install a Java Development Kit . You should install Apache Maven : Use the reference documentation and validate your installation with mvn -version \ud83d\udce6 Setup Project Import relevant dependencies for Apache Http Client in your pom.xml . Jackon is also helpful to serialize or unserialized Java Objects as JSON. <dependency> <groupId> org.apache.httpcomponents.client5 </groupId> <artifactId> httpclient5 </artifactId> <version> 5.1.3 </version> </dependency> \ud83d\udda5\ufe0f Sample Code (project astra-httpclient-docapi ) \u23eb Back to top","title":"5. Stargate Document Api"},{"location":"language-java/#6-stargate-graphql","text":"","title":"6 Stargate GraphQL"},{"location":"language-java/#61-cql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.1 CQL First"},{"location":"language-java/#62-graphql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.2 GraphQL First"},{"location":"language-java/#7-stargate-grpc","text":"","title":"7. Stargate gRPC"},{"location":"language-java/#71-stargate-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.1 Stargate Client"},{"location":"language-java/#72-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.2 Astra SDK"},{"location":"language-java/#8-pulsar-client","text":"","title":"8. Pulsar Client"},{"location":"language-java/#81-pulsar-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.1 Pulsar Client"},{"location":"language-java/#82-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.2 Astra SDK"},{"location":"language-java/#9-pulsar-admin","text":"","title":"9. Pulsar Admin"},{"location":"language-java/#10-devops-api-database","text":"","title":"10 Devops API Database"},{"location":"language-java/#11-devops-api-organization","text":"","title":"11 Devops API Organization"},{"location":"language-java/#12-devops-api-streaming","text":"","title":"12 Devops API Streaming"},{"location":"language-javascript/","text":"1. Overview \u00b6 Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here . 2. Interfaces List \u00b6 Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming 3. CQL \u00b6 3.1 Cassandra Drivers \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 3.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4. Stargate REST Api \u00b6 4.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5. Stargate Document Api \u00b6 5.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6 Stargate GraphQL \u00b6 6.1 CQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6.2 GraphQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7. Stargate gRPC \u00b6 7.1 Stargate Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8. Pulsar Client \u00b6 8.1 Pulsar Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 9. Pulsar Admin \u00b6 10 Devops API Database \u00b6 11 Devops API Organization \u00b6 12 Devops API Streaming \u00b6","title":"Javascript"},{"location":"language-javascript/#1-overview","text":"Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here .","title":"1. Overview"},{"location":"language-javascript/#2-interfaces-list","text":"Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming","title":"2. Interfaces List"},{"location":"language-javascript/#3-cql","text":"","title":"3. CQL"},{"location":"language-javascript/#31-cassandra-drivers","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.1 Cassandra Drivers"},{"location":"language-javascript/#32-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.2 Astra SDK"},{"location":"language-javascript/#4-stargate-rest-api","text":"","title":"4. Stargate REST Api"},{"location":"language-javascript/#41-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.1 Axios"},{"location":"language-javascript/#42-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.2 Astra SDK"},{"location":"language-javascript/#5-stargate-document-api","text":"","title":"5. Stargate Document Api"},{"location":"language-javascript/#51-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.1 Axios"},{"location":"language-javascript/#52-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.2 Astra SDK"},{"location":"language-javascript/#6-stargate-graphql","text":"","title":"6 Stargate GraphQL"},{"location":"language-javascript/#61-cql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.1 CQL First"},{"location":"language-javascript/#62-graphql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.2 GraphQL First"},{"location":"language-javascript/#7-stargate-grpc","text":"","title":"7. Stargate gRPC"},{"location":"language-javascript/#71-stargate-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.1 Stargate Client"},{"location":"language-javascript/#72-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.2 Astra SDK"},{"location":"language-javascript/#8-pulsar-client","text":"","title":"8. Pulsar Client"},{"location":"language-javascript/#81-pulsar-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.1 Pulsar Client"},{"location":"language-javascript/#82-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.2 Astra SDK"},{"location":"language-javascript/#9-pulsar-admin","text":"","title":"9. Pulsar Admin"},{"location":"language-javascript/#10-devops-api-database","text":"","title":"10 Devops API Database"},{"location":"language-javascript/#11-devops-api-organization","text":"","title":"11 Devops API Organization"},{"location":"language-javascript/#12-devops-api-streaming","text":"","title":"12 Devops API Streaming"},{"location":"language-python/","text":"1. Overview \u00b6 Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here . 2. Interfaces List \u00b6 Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming 3. CQL \u00b6 3.1 Cassandra Drivers \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 3.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4. Stargate REST Api \u00b6 4.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5. Stargate Document Api \u00b6 5.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6 Stargate GraphQL \u00b6 6.1 CQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6.2 GraphQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7. Stargate gRPC \u00b6 7.1 Stargate Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8. Pulsar Client \u00b6 8.1 Pulsar Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 9. Pulsar Admin \u00b6 10 Devops API Database \u00b6 11 Devops API Organization \u00b6 12 Devops API Streaming \u00b6","title":"Python"},{"location":"language-python/#1-overview","text":"Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here .","title":"1. Overview"},{"location":"language-python/#2-interfaces-list","text":"Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming","title":"2. Interfaces List"},{"location":"language-python/#3-cql","text":"","title":"3. CQL"},{"location":"language-python/#31-cassandra-drivers","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.1 Cassandra Drivers"},{"location":"language-python/#32-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.2 Astra SDK"},{"location":"language-python/#4-stargate-rest-api","text":"","title":"4. Stargate REST Api"},{"location":"language-python/#41-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.1 Axios"},{"location":"language-python/#42-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.2 Astra SDK"},{"location":"language-python/#5-stargate-document-api","text":"","title":"5. Stargate Document Api"},{"location":"language-python/#51-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.1 Axios"},{"location":"language-python/#52-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.2 Astra SDK"},{"location":"language-python/#6-stargate-graphql","text":"","title":"6 Stargate GraphQL"},{"location":"language-python/#61-cql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.1 CQL First"},{"location":"language-python/#62-graphql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.2 GraphQL First"},{"location":"language-python/#7-stargate-grpc","text":"","title":"7. Stargate gRPC"},{"location":"language-python/#71-stargate-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.1 Stargate Client"},{"location":"language-python/#72-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.2 Astra SDK"},{"location":"language-python/#8-pulsar-client","text":"","title":"8. Pulsar Client"},{"location":"language-python/#81-pulsar-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.1 Pulsar Client"},{"location":"language-python/#82-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.2 Astra SDK"},{"location":"language-python/#9-pulsar-admin","text":"","title":"9. Pulsar Admin"},{"location":"language-python/#10-devops-api-database","text":"","title":"10 Devops API Database"},{"location":"language-python/#11-devops-api-organization","text":"","title":"11 Devops API Organization"},{"location":"language-python/#12-devops-api-streaming","text":"","title":"12 Devops API Streaming"},{"location":"language-rust/","text":"1. Overview \u00b6 Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here . 2. Interfaces List \u00b6 Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming 3. CQL \u00b6 3.1 Cassandra Drivers \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 3.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4. Stargate REST Api \u00b6 4.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5. Stargate Document Api \u00b6 5.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6 Stargate GraphQL \u00b6 6.1 CQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6.2 GraphQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7. Stargate gRPC \u00b6 7.1 Stargate Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8. Pulsar Client \u00b6 8.1 Pulsar Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 9. Pulsar Admin \u00b6 10 Devops API Database \u00b6 11 Devops API Organization \u00b6 12 Devops API Streaming \u00b6","title":"Rust"},{"location":"language-rust/#1-overview","text":"Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here .","title":"1. Overview"},{"location":"language-rust/#2-interfaces-list","text":"Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming","title":"2. Interfaces List"},{"location":"language-rust/#3-cql","text":"","title":"3. CQL"},{"location":"language-rust/#31-cassandra-drivers","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.1 Cassandra Drivers"},{"location":"language-rust/#32-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.2 Astra SDK"},{"location":"language-rust/#4-stargate-rest-api","text":"","title":"4. Stargate REST Api"},{"location":"language-rust/#41-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.1 Axios"},{"location":"language-rust/#42-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.2 Astra SDK"},{"location":"language-rust/#5-stargate-document-api","text":"","title":"5. Stargate Document Api"},{"location":"language-rust/#51-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.1 Axios"},{"location":"language-rust/#52-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.2 Astra SDK"},{"location":"language-rust/#6-stargate-graphql","text":"","title":"6 Stargate GraphQL"},{"location":"language-rust/#61-cql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.1 CQL First"},{"location":"language-rust/#62-graphql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.2 GraphQL First"},{"location":"language-rust/#7-stargate-grpc","text":"","title":"7. Stargate gRPC"},{"location":"language-rust/#71-stargate-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.1 Stargate Client"},{"location":"language-rust/#72-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.2 Astra SDK"},{"location":"language-rust/#8-pulsar-client","text":"","title":"8. Pulsar Client"},{"location":"language-rust/#81-pulsar-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.1 Pulsar Client"},{"location":"language-rust/#82-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.2 Astra SDK"},{"location":"language-rust/#9-pulsar-admin","text":"","title":"9. Pulsar Admin"},{"location":"language-rust/#10-devops-api-database","text":"","title":"10 Devops API Database"},{"location":"language-rust/#11-devops-api-organization","text":"","title":"11 Devops API Organization"},{"location":"language-rust/#12-devops-api-streaming","text":"","title":"12 Devops API Streaming"},{"location":"language-scala/","text":"1. Overview \u00b6 Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here . 2. Interfaces List \u00b6 Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming 3. CQL \u00b6 3.1 Cassandra Drivers \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 3.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4. Stargate REST Api \u00b6 4.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 4.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5. Stargate Document Api \u00b6 5.1 Axios \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 5.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6 Stargate GraphQL \u00b6 6.1 CQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 6.2 GraphQL First \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7. Stargate gRPC \u00b6 7.1 Stargate Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 7.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8. Pulsar Client \u00b6 8.1 Pulsar Client \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 8.2 Astra SDK \u00b6 \u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO 9. Pulsar Admin \u00b6 10 Devops API Database \u00b6 11 Devops API Organization \u00b6 12 Devops API Streaming \u00b6","title":"Scala"},{"location":"language-scala/#1-overview","text":"Astra provides include multiple services (Database, Streaming), and, for each, there are multiple Api and interfaces . Frameworks and tools to connect to Astra are related to the Apis you choose. Pick the interface in the table to get relevant instructions. In most case you download a working sample. Those are standalone examples designed as simple as possible. please note that a Software developement KIT (SDK) is also available for you to reduce boilerplate. More information here .","title":"1. Overview"},{"location":"language-scala/#2-interfaces-list","text":"Component Interface Description Astra DB Main connection to Cassandra Astra DB CQL exposes as stateless rest resources Astra DB Use Cassandra as a Document DB Astra DB Create tables and use generated CRUD Astra DB CQL exposes through serialized protobuf Astra Streaming Create Producer, Consumers, Subscriptions.. Astra Streaming Administrate your Pulsar cluster Astra Core Manage Databases Astra Core Manage users and roles Astra Core Manage Streaming","title":"2. Interfaces List"},{"location":"language-scala/#3-cql","text":"","title":"3. CQL"},{"location":"language-scala/#31-cassandra-drivers","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.1 Cassandra Drivers"},{"location":"language-scala/#32-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"3.2 Astra SDK"},{"location":"language-scala/#4-stargate-rest-api","text":"","title":"4. Stargate REST Api"},{"location":"language-scala/#41-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.1 Axios"},{"location":"language-scala/#42-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"4.2 Astra SDK"},{"location":"language-scala/#5-stargate-document-api","text":"","title":"5. Stargate Document Api"},{"location":"language-scala/#51-axios","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.1 Axios"},{"location":"language-scala/#52-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"5.2 Astra SDK"},{"location":"language-scala/#6-stargate-graphql","text":"","title":"6 Stargate GraphQL"},{"location":"language-scala/#61-cql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.1 CQL First"},{"location":"language-scala/#62-graphql-first","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"6.2 GraphQL First"},{"location":"language-scala/#7-stargate-grpc","text":"","title":"7. Stargate gRPC"},{"location":"language-scala/#71-stargate-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.1 Stargate Client"},{"location":"language-scala/#72-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"7.2 Astra SDK"},{"location":"language-scala/#8-pulsar-client","text":"","title":"8. Pulsar Client"},{"location":"language-scala/#81-pulsar-client","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.1 Pulsar Client"},{"location":"language-scala/#82-astra-sdk","text":"\u2139\ufe0f Overview TODO \ud83d\udce6 Prerequisites [ASTRA] TODO \ud83d\udce6 Prerequisites [Development Environment] TODO \ud83d\udce6 Setup Project TODO \ud83d\udda5\ufe0f Sample Code TODO","title":"8.2 Astra SDK"},{"location":"language-scala/#9-pulsar-admin","text":"","title":"9. Pulsar Admin"},{"location":"language-scala/#10-devops-api-database","text":"","title":"10 Devops API Database"},{"location":"language-scala/#11-devops-api-organization","text":"","title":"11 Devops API Organization"},{"location":"language-scala/#12-devops-api-streaming","text":"","title":"12 Devops API Streaming"},{"location":"section-coding/","text":"\ud83d\udee0\ufe0f Coding with Astra \u00b6","title":"\ud83c\udfe0 Home"},{"location":"section-coding/#coding-with-astra","text":"","title":"\ud83d\udee0\ufe0f Coding with Astra"},{"location":"section-work-with-data/","text":"Work with Data \u00b6","title":"Home"},{"location":"section-work-with-data/#work-with-data","text":"","title":"Work with Data"}]}